% = wild card

    SELECT *
    FROM employees
    WHERE first_name like 'goer%'

        - this will give all names starting with GEOR and ends with anything employees

    SELECT * 
    FROM employees
    WHERE first_name like '%z%

        - this will give all names with a z anywhere in it 

    SELECT *
    FROM employees
    WHERE hire_date like '%-12-17'

        - this will give all employees hired on December 17th or any year

AND = limit results

    SELECT *
    FROM employees
    WHERE hire_date like '%-12-17'
    AND birthdate like '%-12-17'

        - this will give all employees hired on December 17th or any year and born 
        on December 17th or any year

OR = expands possibilities

    SELECT *
    FROM employees
    WHERE hire_date like '%-12-17'
    OR birthdate like '%-12-17'

        - this will give all employees hired on December 17th or any year or born 
        on December 17th or any year

NOT = usually expands

    SELECT *
    FROM employees
    WHERE hire_date NOT like '%-12-17';   

We can combine AND, OR, and NOT together
    - parentheses help to determine order of operations
    
    SELECT *
    FROM employees
    WHERE (hire_date like '%-12-17'
    OR birthdate like '%-12-17')
    NOT (hire_date like '%-12-17'
    AND birthdate like '%-12-17')

        - This will give you everyone who has a work aniversary or birthday on a day but not 
        whos hiredata and birthdate are both on that hire_date

IN = allows us to chain together a bunch of OR's

    SELECT *
    FROM employees
    WHERE emp_no IN (101010, 202020, 12345);

        -this will pull up the 3 employees eith these 3 employee ID's

    SELECT *
    FROM employees
    WHERE first_name IN ('Gordi", 'Mary', 'Jane', 'Bob');

        - This willpull up everyone who hos one of these 4 names

NULL = not filled/unimportant/not there

    SELECT *
    FROM properties_2017
    WHERE taxamount < 4000
    AND fireplace cnt IS NOT NULL
    AND aitconditioningtypeid IS NULL
    LIMIT 10;

        - this will show 10 homes with a fireplace and no AC and will limit your results to 
        the first 10

ORDER BY = orders a specified colummn

    SELECT column_name
    FROM table_name
    ORDER BY coulumn_name [ASC | DESC];

    SELECT *
    FROM employees
    ORDER BY hire_date DESC;
        -orders hire date is descending order
    
    SELECT *
    FROM employees
    ORDER BY first_name ASC, last_name ASC;
        -orders both first and last name in ascending order

    SELECT *
    FROM employees
    ORDER BY first_name DESC, birth_date ASC;
        - order first name in descending order and the birth date in ascending order

    SELECT *
    FROM employees
    WHERE emp_no BETWEEN 101010 AND 202020
    AND last_name line '%q%'
    ORDER BY first_name DESC, birth_date ASC;
        
LIMIT = limits the number of results returned from a query

    SELECT column_name
    FROM table_name
    LIMIT count;

    SELECT *
    FROM employees
    LIMIT 10;
        -limits results to first 10

    SELECT *
    FROM salaries
    WHERE salary BETWEEN 67000 and 71000
    LIMIT 100;
        - shows the first 100 people with salaries bewtwwn 67000 and 71000

    SELECT *
    FROM salaries
    WHERE salary BETWEEN 67000 and 71000
    ORDER BY salary ASC
    LIMIT 100;
        - shows the first 100 people with salaries bewtwwn 67000 and 71000 in ascending 
        order by salary

OFFSET = the cousin to LIMIT
    - tell MySQL which row to start with

    SELECT *
    FROM employees
    LIMIT 10 OFFSET 0;
        - shows the first 10 results starting at 0
            . 0 is also the fefualt
            - 1 - 10

    SELECT *
    FAROM employees
    LIMIT 10 OFFSET 10;
        - shows the first 10 results starting at 10
            . 0 is also the fefualt
            - 11 - 20